networks:
  pocket:
    driver: 'bridge'

services:
  postgres:
    image: 'postgres:latest'
    container_name: 'postgres'
    environment:
      - 'POSTGRES_DB=pocket'
      - 'POSTGRES_PASSWORD=postgres'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    restart: 'on-failure'
    networks:
      - 'pocket'

  pgadmin:
    image: "dpage/pgadmin4:latest"
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: tees3359@gmail.com
      PGADMIN_DEFAULT_PASSWORD: 1234
    volumes:
      - './pgadmin/:/var/lib/pgadmin'
    ports:
      - "5050:80"
    restart: always
    networks:
      - 'pocket'

  backend:
    image: 'ghkd110/pocket-wedding-backend:latest'
    container_name: 'backend'
    environment:
      USE_PROFILE: prod
      NORM_PROP: docker1
      DIRECT_MSG: hello
    ports:
      - '8080:8080'
    restart: 'always'
    networks:
      - 'pocket'
  
  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: 'npm'
    ports:
      - '81:81'
      - '443:443'
      - '80:80'
    volumes:
      - ./nginx-proxy-manager/data:/data
      - ./nginx-proxy-manager/letsencrypt:/etc/letsencrypt
    restart: unless-stopped
    networks:
      - pocket

  db:
    image: 'mysql:8.3'
    container_name: 'db'
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
      MYSQL_ROOT_HOST: '%'
    ports:
      - '3306:3306'
    restart: 'on-failure'
    networks:
      - pocket
  
  front:
    build:
      context: frontend
      dockerfile: Dockerfile
    container_name: front
    ports:
      - "3000:3000"
    command: yarn dev
    restart: always
    networks:
      - "pocket"